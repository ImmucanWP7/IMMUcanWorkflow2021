cur_mat <- t(assay(cur_sce, "exprs")[!grepl("DNA|Histone", rownames(cur_sce)),])
dummies <- dummyVars(SampleId ~ Indication, data = colData(cur_sce))
all_dummies <- predict(dummies, newdata = colData(cur_sce))
all_dummies <- cbind(all_dummies, matrix(0, nrow = nrow(all_dummies), dimnames = list(rownames(all_dummies), "IndicationGI")))
cur_mat <- cbind(cur_mat, all_dummies)
cur_pred <- predict(rffit,
newdata = cur_mat)
cur_ref <- factor(cur_sce$cell_labels, levels = levels(cur_pred))
cm <- confusionMatrix(data = cur_pred, reference = cur_ref, mode = "everything")
cm
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
cur_pred <- predict(rffit,
newdata = cur_mat,
type = "prob")
cur_pred$truth <- factor(cur_sce$cell_labels)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
validation <- readRDS("O:/immucan/processed_data/Panel_1/2022_WORKFLOW/IMC/Rout/sce.rds")
validation <- readRDS("O:/projects/immucan/processed_data/Panel_1/2022_WORKFLOW/IMC/Rout/sce.rds")
# Add dummy variables
cur_mat <- t(assay(validation, "exprs")[!grepl("DNA|Histone", rownames(validation)),])
dummies <- dummyVars(sample_id ~ Indication, data = colData(validation))
all_dummies <- predict(dummies, newdata = colData(validation))
cur_mat <- cbind(cur_mat, all_dummies)
cur_pred <- predict(rffit,
newdata = cur_mat)
cur_ref <- validation$celltype
cur_ref[cur_ref == "Bcell"] <- "B"
cur_ref[cur_ref == "Plasma"] <- "plasma"
cur_ref[cur_ref == "BnTcell"] <- "BnT"
cur_pred <- factor(cur_pred, levels = unique(cur_ref))
cm <- confusionMatrix(data = cur_pred, reference = factor(cur_ref, levels = unique(cur_ref)), mode = "everything")
cm
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
ylim(c(0.7, 1)) +
theme_bw() +
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
# Add dummy variables
cur_sce <- final_test
cur_mat <- t(assay(cur_sce, "exprs")[!grepl("DNA|Histone", rownames(cur_sce)),])
dummies <- dummyVars(SampleId ~ Indication, data = colData(cur_sce))
all_dummies <- predict(dummies, newdata = colData(cur_sce))
all_dummies <- cbind(all_dummies, matrix(0, nrow = nrow(all_dummies), dimnames = list(rownames(all_dummies), "IndicationGI")))
cur_mat <- cbind(cur_mat, all_dummies)
cur_pred <- predict(rffit,
newdata = cur_mat)
cur_ref <- factor(cur_sce$cell_labels, levels = levels(cur_pred))
cm <- confusionMatrix(data = cur_pred, reference = cur_ref, mode = "everything")
cm
pdf(file ="../output/Figure_S4/Fig_4A.pdf")
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
dev.off()
pdf(file ="../output/Figure_S4/Fig_4A.pdf", width = 6,height = 4)
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
dev.off()
pdf(file ="../output/Figure_S4/Fig_4A.pdf", width = 7,height = 5)
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
dev.off()
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(1,6))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(1,10))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(20))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(1,120))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(1,20))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(1,10))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
pdf(file ="../output/Figure_S4/Fig_4A.pdf", width = 7,height = 5)
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(1,10))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
dev.off()
cur_pred <- predict(rffit,
newdata = cur_mat,
type = "prob")
cur_pred$truth <- factor(cur_sce$cell_labels)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
cur_pred <- predict(rffit,
newdata = cur_mat,
type = "prob")
cur_pred$truth <- factor(cur_sce$cell_labels)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
m_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
png(file ="../output/Figure_S4/Fig_4B.png", width = 7,height = 12,units = "cm")
?png
png(file ="../output/Figure_S4/Fig_4B.png", width = 7,height = 12,units = "cm", res = 300)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
png(file ="../output/Figure_S4/Fig_4B.png", width = 20,height = 10,units = "cm", res = 300)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
png(file ="../output/Figure_S4/Fig_4B.png", width = 24,height = 14,units = "cm", res = 300)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(1,10))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
pdf(file ="../output/Figure_S4/Fig_4A.pdf", width = 8,height = 6)
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(1,10))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
dev.off()
pdf(file ="../output/Figure_S4/Fig_4A.pdf", width = 8,height = 6)
data.frame(cm$byClass) %>%
mutate(class = sub("Class: ", "", rownames(cm$byClass))) %>%
ggplot() +
geom_point(aes(1 - Specificity, Sensitivity,
size = Detection.Rate,
fill = class),
shape = 21) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme_bw() +
scale_size(range = c(1,12))+
ylab("Sensitivity (TPR)") +
xlab("1 - Specificity (FPR)")
dev.off()
png(file ="../output/Figure_S4/Fig_4B.png", width = 35,height = 22,units = "cm", res = 300)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
png(file ="../output/Figure_S4/Fig_4B.png", width = 35,height = 22,units = "cm", res = 600)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))+
ylab("max probability")+
xlab("cell type")
cur_pred %>%
pivot_longer(cols = B:Tumor)
png(file ="../output/Figure_S4/Fig_4B.png", width = 35,height = 22,units = "cm", res = 300)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))+
ylab("max probability")+
xlab("cell type")
dev.off()
png(file ="../output/Figure_S4/Fig_4B.png", width = 35,height = 22,units = "cm", res = 1200)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))+
ylab("max probability")+
xlab("cell type")
dev.off()
png(file ="../output/Figure_S4/Fig_4B.png", width = 35,height = 22,units = "cm", res = 1200)
cur_pred %>%
pivot_longer(cols = B:Tumor) %>%
ggplot() +
geom_boxplot(aes(x = name, y = value, fill = name), outlier.size = 0.5) +
facet_wrap(. ~ truth) +
scale_fill_manual(values = metadata(sce)$colour_vectors$cell_types) +
theme(panel.background = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))+
ylab("probability")+
xlab("cell type")
dev.off()
library(spatstat)
library(sf)
?mat.test
?mad.test
?gmm
library(gmm)
X = runif(1000,0,1)   # random sample from U[0,1]
Z = F.inv(X,2,2,2,1)
f = function(x,alpha, beta, nu, tau) {   # probability density of dPlN
A = function(theta, nu, tau) exp(theta*nu +(alpha*tau)^2/2)
c = alpha*beta/(alpha+beta)
z.alpha = (log(x) - nu - alpha*tau^2)/tau
z.beta  = (log(x) - nu + beta*tau^2)/tau
t.alpha = x^-(alpha+1)*A(alpha,nu,tau)*pnorm(z.alpha)
t.beta  = x^(beta-1)*A(-beta,nu,tau)*(1-pnorm(z.beta))
return(c*(t.alpha + t.beta))
}
F = function(x,alpha,beta,nu,tau) {      # cumulative density function of dPlN
ifelse(x > 1e4, 1, integrate(f,0.001,x,alpha,beta,nu,tau)$value)}
F = Vectorize(F, vectorize.args="x")
F.inv = function(y, alpha,beta,nu,tau){  # inverse CDF of dPlN
uniroot(function(x, alpha,beta,nu,tau){F(x, alpha,beta,nu,tau)-y},
interval=c(0,1e6),alpha,beta,nu,tau)$root
}
F.inv = Vectorize(F.inv, vectorize.args="y")
x=seq(0,50,length.out=1000)
y=seq(0,.995,length.out=1000)
par(mfrow=c(1,3))
plot(x,f(x,2,2,2,1),type="l",main="f(x)")
plot(x,F(x,2,2,2,1),type="l",main="CDF of f(x)")
plot(y,F.inv(y,2,2,2,1),type="l",main="Inverse CDF of f(x)")
y
plot(y)
# Set path
if (Sys.info()["sysname"] == "Windows"){
mount_path <- "O:/projects/immucan"
} else {
mount_path <- "/Volumes/G_DQBM_BB_Central$/projects/immucan"
}
library(SingleCellExperiment)
library(tidyverse)
library(ggpubr)
library(cowplot)
library(imcRtools)
sce_IMC <- readRDS(file.path(mount_path, "processed_data/Panel_1/2022_WORKFLOW/IMC/Rout/sce.rds"))
sce_mIF <- readRDS(file.path(mount_path, "processed_data/Panel_1/2022_WORKFLOW/mIF/Rout/sce_ROIs.rds"))
library(edgeR)
library(ggrepel)
cur_mIF <- colData(sce_mIF)
cur_IMC <- colData(sce_IMC)
table(cur_IMC$matched_celltype, cur_IMC$sample_id)
unique(cur_IMC$sample_id)
unique(cur_IMC$patient_id)
abundances_IMC <- unclass(table(cur_IMC$matched_celltype, cur_IMC$patient_id))
# Metdata for IMC
meta_IMC <- data.frame(patient_id = colnames(abundances_IMC),
patient_id = sub("-", "", str_extract(colnames(abundances_IMC), "[0-9]{8}-")),
modality = "IMC")
# Count cell types for mIF
abundances_IF <- unclass(table(cur_mIF$matched_celltype, cur_mIF$patient_id))
# Metadata for mIF
meta_IF <- data.frame(patient_id = colnames(abundances_IF),
patient_id = sub("-", "", str_extract(colnames(abundances_IF), "[0-9]{8}-")),
modality = "mIF")
colnames(abundances_IMC) <- paste(colnames(abundances_IMC), "IMC")
colnames(abundances_IF) <- paste(colnames(abundances_IF), "mIF")
stopifnot(all.equal(rownames(abundances_IMC), rownames(abundances_IF)))
combined_df <- cbind(abundances_IMC, abundances_IF)
combined_meta <- rbind(meta_IMC, meta_IF)
# DA testing
y.ab <- DGEList(combined_df, samples=combined_meta, group = combined_meta$modality)
# Define the design matrix for the model: Add modality to the model to account for matched design
design <- model.matrix(~patient_id + modality, data = y.ab$samples)
# Estimate NB and QL dispersion
y.ab <- estimateDisp(y.ab, design, trend="none")
summary(y.ab$common.dispersion)
plotBCV(y.ab, cex=1)
fit.ab <- glmQLFit(y.ab, design, robust=TRUE, abundance.trend=FALSE)
summary(fit.ab$var.prior)
summary(fit.ab$df.prior)
plotQLDisp(fit.ab, cex=1)
# Test for differential abundance of cell types
res <- glmQLFTest(fit.ab, coef=ncol(design))
summary(decideTests(res))
DA <- topTags(res)$table
DA$celltype <- rownames(DA)
DA$sign <- DA$FDR<0.05
DA
# Volcano plot
ggplot(DA) + geom_point(aes(logFC, -log10(FDR), color = sign)) +
geom_label_repel(aes(logFC, -log10(FDR), label = celltype)) +
theme_classic()
# MA plot
(p <- ggplot(DA) + geom_abline(intercept = 0, slope = 0, color = "dark red", lwd = 3) +
geom_point(aes(logCPM, logFC), size = 7) +
geom_point(aes(logCPM, logFC, color = sign), size = 5) +
geom_label_repel(aes(logCPM, logFC, label = celltype), size = 7) +
scale_color_manual(values = c("TRUE" = "dark green", "FALSE" = "white"),
name = "Significance") +
ylab(c("log2 Fold Change")) + xlab("log2 CPM") +
ylim(c(-1.5, 1.5)) +
theme_classic(base_size = 25))+
theme(legend.position = "none")
knitr::opts_chunk$set(echo = TRUE)
unz("D:/Data/temp/10040768-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_59d6dd424d7e5fde54413aefdd097925.zip")
unz("D:/Data/temp/10040768-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_59d6dd424d7e5fde54413aefdd097925.zip", filename = "correct.csv")
unz("D:/Data/temp/10040769-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_f47bfe1b018641e88062b4811765b75b.zip", filename = "false.csv")
?unz
getwd()
unz("D:/Data/temp/10040768-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_59d6dd424d7e5fde54413aefdd097925.zip", filename = "D:/Data/temp/correct.csv")
unz("D:/Data/temp/10040768-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_59d6dd424d7e5fde54413aefdd097925.zip", filename = "cell_metadata.csv")
cell_meta_correct <- read.csv(unz("D:/Data/temp/10040768-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_59d6dd424d7e5fde54413aefdd097925.zip", filename = "cell_metadata.csv"), row.names = 1)
cell_meta_correct
cell_meta_false <- read.csv(unz("D:/Data/temp/10040769-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_f47bfe1b018641e88062b4811765b75b.zip", filename = "cell_metadata.csv"), row.names = 1)
cell_meta_false
cell_meta_correct <- read.csv(unz("D:/Data/temp/10040768-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_59d6dd424d7e5fde54413aefdd097925.zip", filename = "cell_metadata.csv"))
cell_meta_correct
cell_meta_false <- read.csv(unz("D:/Data/temp/10040769-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_f47bfe1b018641e88062b4811765b75b.zip", filename = "cell_metadata.csv"))
cell_meta_false
read.csv("D:/Data/temp/10040768-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_59d6dd424d7e5fde54413aefdd097925/cell_metadata.csv")
read.csv("D:/Data/temp/10040768-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_59d6dd424d7e5fde54413aefdd097925/cell_metadata.csv",row.names = 1)
unzipped_correct <- read.csv("D:/Data/temp/10040768-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_59d6dd424d7e5fde54413aefdd097925/cell_metadata.csv",row.names = 1)
unzipped_correct
unzipped_false <- read.csv("D:/Data/temp/10040769-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_f47bfe1b018641e88062b4811765b75b/cell
_metadata.csv",row.names = 1)
unzipped_false <- read.csv("D:/Data/temp/10040769-LUNG-VAR-TIS-01-PB_#_IMMUcan_panel_2_1.02_#_THOR_#_f47bfe1b018641e88062b4811765b75b/cell_metadata.csv",row.names = 1)
unzipped_false
colnames(unzipped_correct)
colnames(unzipped_false)
colnames(unzipped_correct)
colnames(unzipped_false)
View(unzipped_false)
unique(unzipped_correct$QC_comments)
unique(unzipped_false$QC_comments)
View(unzipped_correct)
View(unzipped_correct)
View(unzipped_false)
